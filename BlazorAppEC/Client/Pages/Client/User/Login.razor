@page "/login"
@inject IUserLoginVM _userLoginVM
@inject AuthenticationStateProvider authState
@inject NavigationManager _navManage
@inject Blazored.LocalStorage.ILocalStorageService _localStorage

<div class="container my-10 py-10">
    <div class="row">
        <div class="col-sm-6 col-sm-offset-3 col-md-4 col-md-offset-4 md-padding">
            <h1 class="align-center text-6xl mt-4 mb-2">Chào mừng quay trở lại</h1>
            <br>

            <form class="signin" @onsubmit="login">
                <input type="email" name="email" placeholder="E-mail" @bind-value="_userLoginVM.User.Email" class="form-control" />
                <br>
                <input type="password" name="password" placeholder="Mật khẩu" @bind-value="_userLoginVM.User.Password" class="form-control" />
                <br>

                <hr class="offset-xs">

                <button class="btn btn-info w-full flex items-center justify-center" @onclick="login" disabled=@(isLoading)>
                    @if (isLoading)
                    {
                        <svg class="animate-spin h-6 w-6 mx-2 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-50" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-100" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    }
                    else
                    {
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 inline mx-2" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z" clip-rule="evenodd" />
                        </svg>
                    }
                    Đăng nhập </button>
                <hr class="offset-sm">

                <p>
                    Chưa có tài khoản? <NavLink href="signup"> Đăng ký ! </NavLink>
                </p>

            </form>
        </div>
    </div>
</div>

@code {
    private bool isLoading { get; set; } = false;
    protected async override Task OnInitializedAsync()
    {
        var UserState = await authState.GetAuthenticationStateAsync();
        var user = UserState.User;
        if (user.Identity.IsAuthenticated)
        {
            _navManage.NavigateTo("/home");
        }
    }
    protected async Task login()
    {
        isLoading = true;
        AuthenticationResponse authRes = await _userLoginVM.authenticateJWT();
        if (authRes.Token != string.Empty)
        {
            await _localStorage.SetItemAsync<string>("jwt_token", authRes.Token);
            await ((BlazorAppEC.Client.CustomAuthenticationStateProvider)authState).MarkUserAsAuthenticated();

            //Note: set loading to false and navigate here
            isLoading = false;
            _navManage.NavigateTo("/home");
        }
        isLoading = false;
        StateHasChanged();
    }
    protected async Task logout()
    {
        await ((BlazorAppEC.Client.CustomAuthenticationStateProvider)authState).MarkUserAsLoggedOut();
        StateHasChanged();
    }
}