@page "/checkout"
@using System.Security.Claims
@inject NavigationManager _navigate
@inject ICartService _cartService
@inject ICheckoutVM _checkoutVM

<AuthorizeView>
    <NotAuthorized>
        @if(true) {
        _navigate.NavigateTo("/login");
        }
    </NotAuthorized>
    <Authorized>
        @if(_cartService.Carts.Count == 0) {
            _navigate.NavigateTo("/home");
        }
        <hr class="offset-md">
        
        <div class="box">
            <div class="container">
                <h1>Thanh toán hoá đơn</h1>
            </div>
        </div>
        <hr class="offset-md">

        <div class="container">
            <div class="row">
                <div class="col-md-8">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="checkout">
                                <div class="addresses box-select">
                                    <h2> 1. Địa chỉ giao hàng</h2>
                                    <hr class="offset-sm">

                                    <address class="box-default sm-padding" data-style="selected">
                                        <hr class="offset-sm">

                                        <h3 class="no-margin"><i class="ion-ios-person"></i> @_checkoutVM.User.Fullname</h3>
                                        <p>
                                            <i class="ion-ios-location"></i> @_checkoutVM.User.Address
                                        </p>

                                        <div class="check">
                                            <i class="ion-checkmark-round"></i>
                                        </div>
                                        <hr class="offset-sm">
                                    </address>

                                    <hr class="offset-sm">
                                    <hr>
                                </div>
                                <div class="payment box-select">
                                    <h2> 2. Phương thức thanh toán </h2>
                                    <hr class="offset-sm">

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="box-default sm-padding" data-style="selected">
                                                <hr class="offset-sm">
                                                <img src="img/payments/cash-on-delivery.png" title="paypal" alt="paypal" class="w-20 h-auto object-contain"/>
                                                <span>miễn phí dịch vụ</span>
                                                <div class="check">
                                                    <i class="ion-checkmark-round"></i>
                                                </div>
                                                <hr class="offset-sm">
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="box-default sm-padding">
                                                <hr class="offset-sm">
                                                <img src="img/payments/credit-card.png" class="w-20 h-auto object-contain" title="stripe" alt="stripe" />
                                                <span>1% phí dịch vụ</span>
                                                <div class="check">
                                                    <i class="ion-checkmark-round"></i>
                                                </div>
                                                <hr class="offset-sm">
                                            </div>
                                        </div>
                                    </div>
                                    <hr class="offset-sm">
                                    <hr>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-8 col-md-4">
                    <hr class="offset-sm visible-sm">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <h2 class="no-margin">Tổng quát</h2>
                            <hr class="offset-md">

                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-xs-6">
                                        <p>Tổng @_cartService.GetTotalItems() sản phẩm</p>
                                        <p>Giảm giá</p>
                                        <p>Phí giao hàng</p>
                                    </div>
                                    <div class="col-xs-6">
                                        <p><b>
                                            @(String.Format("{0:n0}", _cartService.GetPrice())) <sup>vnd</sup>
                                        </b></p>
                                        <p><b>@(_checkoutVM.Discount.Code == String.Empty ? 0 : _checkoutVM.Discount.DiscountPercent)%</b></p>
                                        <p><b>0</b></p>
                                    </div>
                                </div>
                            </div>

                            <div class="checkboxes">
                                <div class="radio">
                                    <div>
                                        Mã khuyến mãi
                                    </div>
                                    <hr class="offset-xs">

                                    <div class="input-group">
                                        <input @bind-value="@_checkoutVM.discountCode" type="text" class="form-control input-sm" placeholder="Nhập code">
                                        <span class="input-group-btn">
                                            <button class="btn btn-info btn-sm" @onclick="_checkoutVM.VerifyDiscount">Kiểm tra</button>
                                        </span>
                                    </div><!-- /input-group -->
                                </div>
                            </div>
                            <hr>

                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-xs-6">
                                        <h3 class="no-margin">Tổng tiền</h3>
                                    </div>
                                    <div class="col-xs-6">
                                        <h3 class="no-margin">
                                            @(String.Format("{0:n0}", GetTotal())) <sup>vnd</sup>
                                        </h3>
                                    </div>
                                </div>
                            </div>
                            <hr class="offset-md">

                            <button class="btn btn-primary btn-lg justify" @onclick="PlaceOrder" disabled=@(isLoading)><i class="ion-compose"></i>&nbsp;&nbsp; Xác nhận đơn hàng</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <hr class="offset-lg">
        <hr class="offset-lg">
    </Authorized>
</AuthorizeView>

@code {
    [CascadingParameter] Task<AuthenticationState> _authState { get; set; }
    private bool isLoading = false;
    private Double GetTotal() {
        Double DiscountPercent = 1.0;
        Double total = 0;
        if(_checkoutVM.Discount.Code != string.Empty && _checkoutVM.Discount.DiscountPercent != 0) {
            DiscountPercent = (double) (100 - _checkoutVM.Discount.DiscountPercent)/100;
        }
        total = _cartService.GetPrice();
        total = total * (DiscountPercent);

        return total;
    }
    protected async override Task OnInitializedAsync()
    {
        var userState = await _authState;
        var user = userState.User;
        
        if (!user.Identity.IsAuthenticated || _cartService.Carts.Count == 0)
        {
            _navigate.NavigateTo("/login");
        } else {
            IEnumerable<Claim> _claim = Enumerable.Empty<Claim>();
            _claim = user.Claims;
            _checkoutVM.User.UserId = Convert.ToInt32(_claim.Where(c => c.Type == ClaimTypes.NameIdentifier).FirstOrDefault().Value);
            _checkoutVM.User.Fullname = _claim.Where(c => c.Type == ClaimTypes.Name).FirstOrDefault().Value;
            _checkoutVM.User.Address = _claim.Where(c => c.Type == ClaimTypes.StreetAddress).FirstOrDefault().Value;                                  
        }
    }
    protected async Task PlaceOrder() {
        isLoading = true;
        await _checkoutVM.Checkout();
        isLoading = false;
    }
}